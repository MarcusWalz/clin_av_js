{"version":3,"sources":["test/graph_node.ts"],"names":[],"mappings":"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","file":"test/graph_node.js","sourcesContent":["/// <reference path=\"test.d.ts\" />\n/// <reference path=\"../graph_node.ts\" />\n\n\nimport chai       = require('chai');\nimport graph_node = require('../graph_node');\n\nvar expect = chai.expect;\n\ndescribe('Graph Node', () => {\n  var in_column = ['1', '2', '3', '*', '3'];\n  var g = new graph_node.GraphNode('Hello', in_column);\n\n  it('should have name', (done) => {\n    expect(g.getName()).to.equals('Hello');\n    done();\n  }); \n\n  it('name should be changeable', (done) => {\n    g.setName('Change');\n    expect(g.getName()).to.equals('Change');\n      done();\n    });\n\n    it('should have length equal to input column', (done) => {\n      expect(g.length()).to.equals(in_column.length);\n      done();\n    }); \n\n    it('.getMissingVal() should be null', (done) => {\n      expect(g.getMissingVal()).to.be.null;\n      done();\n    });\n\n    it('.getValues() should output in same order recieved', (done) => {\n      expect(g.getValues()).to.eql(['1', '2', '3', '*']);\n      done();\n    });\n\n    it('.getMissingVal() should be set to *', (done) => {\n      g.setMissingVal('*');\n      expect(g.getMissingVal()).to.equal('*');\n      done();\n    });\n\n    it('.getValues() should output missing first', (done) => {\n      expect(g.getValues()).to.eql(['*', '1', '2', '3']);\n      done();\n    });\n\n    it('.getColumn() should be equal to input column', (done) => {\n      expect(g.getColumn()).to.eql(in_column);\n      done();\n    });\n\n    it('.getCell() should output the correct cell', (done) => {\n      for (var i:number = 0; i < in_column.length; i++) { \n        expect(g.getCell(i)).to.equal(in_column[i]);\n      }\n      done();\n    });\n\n    it('.getCell() should throw RangeError', (done) => {\n      expect( () => { g.getCell(in_column.length); }\n          ).to.throw(RangeError);\n      done();\n    });\n\n});\n"],"sourceRoot":"/source/"}