{"version":3,"sources":["test/cpt.ts"],"names":[],"mappings":"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","file":"test/cpt.js","sourcesContent":["/// <reference path=\"test.d.ts\" />\n/// <reference path=\"../graph_node.ts\" />\n/// <reference path=\"../graph.ts\" />\n/// <reference path=\"../cpt.ts\" />\n\n\nimport chai        = require('chai');\nimport graph_node  = require('../graph_node');\nimport graph       = require('../graph');\nimport cpt         = require('../cpt');\n\n// fuck node\n// eval(require('fs').readFileSync('../aux_scripts/all.js', 'utf8'));\n//console.log(collections);\n\n\nvar expect = chai.expect;\n\n\ndescribe('CPT', () => {\n  var col1 = ['1', '2', '3', '4', '5'];\n  var col2 = ['a', 'b', 'c', 'a', 'a'];\n  var col3 = ['t', 'f', 't', 't', 't'];\n\n  var gn1 = new graph_node.GraphNode('N1', col1);\n  var gn2 = new graph_node.GraphNode('N2', col2);\n  var gn3 = new graph_node.GraphNode('N3', col3);\n\n  console.log(new cpt.CPT(gn1, [gn2, gn3]));\n  console.log(new cpt.CPT(gn1, [gn2, gn3]).conditionTable());\n\n  it('Should work without parents'), (done) => {\n\n  });\n  it('should work with only 1 condition', (done) => {\n    var c = new cpt.CPT(gn1, [gn2]);\n    done();\n  });\n\n  it('sum of counts should be eq. number of data points', (done) => {\n    var c = new cpt.CPT(gn1, [gn2, gn3]); \n\n    var flat = [];\n    flat = flat.concat.apply([], c.counts);\n    var entries = flat.reduce( (a, b) => { return a + b; } );\n    expect(entries).to.be.equal(gn1.length());\n    done();\n\n  });\n\n  it('index and unindex should be inverses', (done) => {\n    var c = new cpt.CPT(gn1, [gn2, gn3]); \n    for (var i = 0; i < 6; i++) {\n      expect(c.index(c.unindex(i))).to.equal(i);\n    }\n    done();\n  });\n  it('should output the lookup table');\n  it('should have an addition opperation');\n  it('should be divided by an integer');\n  it('should be dividable');\n  it('should output probs. to');\n\n});\n"],"sourceRoot":"/source/"}